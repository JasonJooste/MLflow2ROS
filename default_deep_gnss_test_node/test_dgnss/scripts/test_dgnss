#!/usr/bin/env python

import rospy
import chee_deep_gnss_msgs.srv
import numpy as np

def main():
    rospy.init_node("test_dgnss", anonymous=False)

    # 8 x 4 data
    data = [[[-7116.5185546875,-0.06953618675470352,-0.6216740608215332,0.13343194127082825]],[[4.514790058135986,-0.2431575357913971,-0.5593196153640747,0.7555046081542969]],
            [[-5.880783557891846,-0.20440232753753662,-0.5760226845741272,0.7284236550331116]],[[62.7269172668457,-0.6683666110038757,0.6634187698364258,-0.6730231642723083]],
            [[47.56004333496094,-0.5544824600219727,0.8396704792976379,-0.7236108183860779]],[[-6.2754435539245605,-0.27974697947502136,0.9681740403175354,0.3577924966812134]],
            [[-78.64048767089844,0.6638991832733154,-0.5480718612670898,-0.11626642942428589]],[[19.352645874023438,-0.39997398853302,0.8556338548660278,-0.7187480926513672]]]

    X = np.array(data).ravel()

    req = chee_deep_gnss_msgs.srv.chee_deep_gnssRequest(X)

    print("Waiting for service")
    rospy.wait_for_service("chee_deep_gnss_service")

    logreg = rospy.ServiceProxy(
        "chee_deep_gnss_service", chee_deep_gnss_msgs.srv.chee_deep_gnss
    )

    try:
        print("Sending request")
        predictions = logreg(req).chee_deep_gnss_res
    except rospy.ServiceException as exc:
        print("Service did not process request: " + str(exc))

    print("Received response: ")
    print(predictions)

    rospy.spin()

if __name__ == "__main__":
    main()
