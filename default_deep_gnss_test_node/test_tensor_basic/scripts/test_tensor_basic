#!/usr/bin/env python

import unittest

import rospy
import deep_gnss_test_msgs.srv
from sklearn import datasets
from sklearn.model_selection import train_test_split
import numpy as np

def main():
    rospy.init_node("test_tensor_basic", anonymous=False)

    in_dict = {"inputs": [[[-36.89361572265625, -0.6384325623512268, 0.23519042134284973, 0.38630712032318115], [-9.108121871948242, -0.590020477771759, 0.19471687078475952, 0.33842185139656067], [-25.74850082397461, -0.5833918452262878, 0.3316693603992462, 0.24626576900482178], [-21.701332092285156, -0.6149217486381531, 0.21504218876361847, 0.3628799021244049], [-20.884214401245117, -0.5698035359382629, 0.31759747862815857, 0.2563074827194214], [6.824853420257568, -0.7294296026229858, 0.3155512809753418, 0.4708055257797241], [-28.339229583740234, -0.7190338969230652, 0.3059723973274231, 0.4619189202785492], [-44.58180236816406, -0.7318032383918762, 0.3177441954612732, 0.4728139042854309]], [[-43.28944396972656, 0.2028406411409378, 0.841829240322113, 0.3001154959201813], [-24.073747634887695, 0.24133850634098053, 0.818803608417511, 0.34259968996047974], [26.762601852416992, 0.8154622316360474, 0.3478907346725464, 0.6334577798843384], [-29.125858306884766, 0.22223521769046783, 0.32153916358947754, 0.6236923336982727], [-0.7154861688613892, 0.8084793090820312, 0.35839536786079407, 0.6368296146392822], [-18.742097854614258, 0.11475768685340881, 0.1980607807636261, 0.5644111633300781], [-24.43621826171875, 0.12642842531204224, 0.2117590457201004, 0.5718756914138794], [-9.59759521484375, 0.11204566806554794, 0.1948571503162384, 0.5626351237297058]], [[5.620872974395752, 0.6149694919586182, 0.03780679032206535, -0.8310976028442383], [10.15776538848877, 0.63163161277771, -0.02682332508265972, -0.8606723546981812], [39.753997802734375, -0.03561156615614891, -0.8643510937690735, 0.5711978077888489], [9.999438285827637, 0.005632780492305756, -0.8462769389152527, 0.5632151961326599], [16.845657348632812, -0.05376560986042023, -0.8716239929199219, 0.5739660263061523], [2.3335204124450684, 0.16540312767028809, -0.7579559683799744, 0.523975133895874], [2.143409490585327, 0.15069423615932465, -0.7675265669822693, 0.5280690789222717], [20.77552604675293, 0.16877391934394836, -0.7557077407836914, 0.5230055451393127]], [[19.610074996948242, 0.5566936135292053, 0.958396315574646, -0.4085804522037506], [21.40536117553711, 0.5696577429771423, 0.9733005166053772, -0.3794642388820648], [29.97269630432129, -0.3757067322731018, -0.8160915374755859, -0.5706008672714233], [23.65817642211914, 0.966249406337738, -0.3940570652484894, -0.837181031703949], [17.063810348510742, -0.36828577518463135, -0.8067605495452881, -0.5788260698318481], [15.813722610473633, 0.9162002801895142, -0.4724404811859131, -0.9076447486877441], [16.908838272094727, 0.9221592545509338, -0.4645831286907196, -0.9018715620040894], [34.29020309448242, 0.9147909879684448, -0.4742683172225952, -0.9089451432228088]], [[10.60905647277832, -0.8526021242141724, -0.5368063449859619, 0.3048408627510071], [8.891854286193848, -0.8206019401550293, -0.5665735006332397, 0.336546927690506], [-2.533885955810547, 0.34081968665122986, 0.6279301047325134, 0.057300593703985214], [-1.365788221359253, 0.32038000226020813, 0.6143471598625183, 0.03770330175757408], [-18.457902908325195, 0.3494357168674469, 0.6337644457817078, 0.06490295380353928], [5.696413993835449, 0.242906391620636, 0.560620903968811, -0.05243274196982384], [-25.31597328186035, 0.2498297542333603, 0.5656609535217285, -0.04309336468577385], [-7.1421284675598145, 0.24131718277931213, 0.5594618320465088, -0.054621100425720215]], [[-20.307432174682617, 0.6037859916687012, 0.021807219833135605, -0.41791850328445435], [-9.899797439575195, 0.6250775456428528, 0.05335944890975952, -0.3967636525630951], [-17.14396858215332, -0.3938693106174469, -0.5773967504501343, -0.865355372428894], [-20.02443504333496, -0.4077123701572418, -0.5519600510597229, -0.14184121787548065], [-42.63909149169922, -0.38812556862831116, -0.5881214737892151, -0.8737834095954895], [-8.620616912841797, -0.45652827620506287, -0.4397527575492859, -0.24699081480503082], [-30.48729705810547, -0.452608197927475, -0.45181116461753845, -0.23664985597133636], [-14.996737480163574, -0.4574234187602997, -0.436954528093338, -0.2493913471698761]], [[-29.796009063720703, -0.5315035581588745, -0.16174651682376862, -0.8269394040107727], [-19.571840286254883, -0.572158932685852, -0.12153759598731995, -0.861090898513794], [8.1085205078125, -0.5228266716003418, -0.09713870286941528, -0.8733922243118286], [3.844853401184082, -0.8444153070449829, -0.499739408493042, -0.8910495042800903], [-11.531298637390137, -0.5323944687843323, -0.10640309751033783, -0.8657063245773315], [8.734936714172363, -0.7450786232948303, -0.4037470817565918, -0.9496148824691772], [-14.3864107131958, -0.7555087208747864, -0.41309019923210144, -0.9448508620262146], [12.23279857635498, -0.7426416277885437, -0.4015774726867676, -0.9506822228431702]], [[-13.779378890991211, -0.4815862476825714, -0.05623594671487808, -0.9038820266723633], [2.1715993881225586, -0.5180426836013794, -0.09249383211135864, -0.8771325945854187], [21.497081756591797, -0.45214492082595825, -0.9977216124534607, -0.31267252564430237], [13.790414810180664, -0.4833068251609802, -0.9992731213569641, -0.34290817379951477], [30.013994216918945, -0.4390794038772583, -0.9964420795440674, -0.29938289523124695], [-3.9561171531677246, -0.6059243083000183, -0.9848312735557556, -0.4659234285354614], [0.9834127426147461, -0.5941261053085327, -0.9876407384872437, -0.4539259970188141], [-2.252767324447632, -0.6086412072181702, -0.984140157699585, -0.46868929266929626]], [[-4.122727870941162, -0.5072031617164612, -0.9990471005439758, -0.3669072389602661], [6.746826171875, -0.45860612392425537, -0.9982150197029114, -0.3190951645374298], [0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0]]]}
    X = np.array(in_dict["inputs"]).ravel()

    req = deep_gnss_test_msgs.srv.deep_gnss_testRequest(X)

    print("Waiting for service")
    rospy.wait_for_service("deep_gnss_test_service")

    logreg = rospy.ServiceProxy(
        "deep_gnss_test_service", deep_gnss_test_msgs.srv.deep_gnss_test
    )

    try:
        print("Sending request")
        predictions = logreg(req).deep_gnss_test_res
    except rospy.ServiceException as exc:
        print("Service did not process request: " + str(exc))

    print("Received response")
    print(predictions)

    rospy.spin()

if __name__ == "__main__":
    main()

# source /activate_ros_env.bash  && source /activate_mlflow_env.bash && rosrun test_tensor_basic test_tensor_basic 